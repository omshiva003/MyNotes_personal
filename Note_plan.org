* Image Processing
** Lossless-Compression
segmentation and sift features
https://www.researchgate.net/profile/Armin_Mustafa
*** 1D signal to vector :
Consider a noise signal : s(t) 

1. Convert to low freq signal(k-levels) (gaussian, mean, spacial compression & Expansion)
https://www.researchgate.net/profile/Armin_Mustafa
   s_low(t/2^k)  = gaussian (s(t))
                = mean( s(t))
                = s(t/2^k)               

2. Segment signal into Regions(pules), each pules having either local max / local min
   
   s_low(t) = sum ( Region(k,i) )

   where : Region_i = region by watershed ( edge of s_low(t) )

3. Each Region in t/2^k plane can be curve fit to montonic curve  
  

4. Streching Region in t/2^k plane to t plane

   Equation_Region =  Curvefit (Convex or smooth curve ) in t-plane
   Edge_Region     =  Countinity point btw ( given Region and Neighborhood Region )

Here we should use monlitical curvefit

NOTE : Curefit or Linear Seg can be done eg: by regression (5 types) https://towardsdatascience.com/5-types-of-regression-and-their-properties-c5e1fa12d55e


5. Noise image of  i^th level   n(t,i)   = s(t)     - s_curefit (t,i)
                   i-1^th level n(t,i-1) = n(t,i)   - n_curvefit(t,i-1)

*** 2D signal 
 Simillar to 1D but

3. Each Region is seperate into 
   Radial region 
   Countor Region

4. Curvefit Region
   
   Equation_Region =  Curvefit (Convex or smooth curve ) in t-plane
   Edge_Region     =  Countinity point btw ( given Region and Neighborhood Region )


5. Noise image of  i^th level   n(t,i)   = s(t)     - s_curefit (t,i)
                   i-1^th level n(t,i-1) = n(t,i)   - n_curvefit(t,i-1)

By recurrsive process of 5th step we will repressinting image in curvefit of different level 
If we use this representation of img to store
 we will get a lossless-compresed image 
 simillar representation in to svg
** Cure fitting
*** monotonic Curve
Contious increase or decrease 
https://en.wikipedia.org/wiki/Monotonic_function
*** Piecewise-Linear function :
https://en.wikipedia.org/wiki/Piecewise_linear_function
http://golovchenko.org/docs/ContinuousPiecewiseLinearFit.pdf
*** Principal Componant Analysis :
Face recognition
 - eigenface
 - principal compoents
this are related to Singular Value Decomposision (svd)

svd :
A = U sigma V*
CORRELATION mATRIX c = A* A

*** Lagranger polynomail eq
*** Least Square Error
*** Vector field and phase-plane
convert (x,y ) equation in vector field(gradient in vector )  and phase-filed (countor of gradiend) https://www.youtube.com/watch?v=7ye8PBQGVpg
*** COMMENT Line-lest simillar to (Wavelets)
given signal is 1:n dimension

given signal      : s1(t)   >   find edges by gradient       >   segment to  region  S1 (find width, end point)   >   seg in n 


for all regions :    if width is less than 2  seg  do for all level         
Error in above method because watershed algorithum is not optimal.

compresses signal : s2(t/2) >   find edges by gradient       >   segment to region  S2  (find width, end point)   >   seg in n/2  






each region is convert signal to monotonic curve 
*** Convex_hull :
create linear countor for  set of points to linear convex hull
https://en.wikipedia.org/wiki/Convex_hull
** Layer representation of image
By above model we can represent img in layers
 
 img = sum    layer_i()
** Creating a features

We can calculate the feature which are not in pixel level but in region/ edges or region level in different layers

 
 Feature_img = sum     feature in each layear

 Feature_i = sum     feature (Region_i)
           = sum     feature (Region_i + Edge_i )
           = sum     gradient (Region_i) + Edge_i

** maping a feature btw img
** Finding ( Optical flow , Sterio vision, depth )
** pixel to vector:
Consider X  = img(x,y)
then we can also reprsent in Z plane which represent 2d boxes of mountains and  bottom

For vector image

 Consider X = [ 234  43
                24   153 ]

Z domain can be approximated to be a z-plain 

Therefore each 2x2 can be represented as a plain,if do entire x,y  domain we get vector image

BUt this vector image  consist of noise, large size, redandancy of data......etc

But we have already discuss layered vise curve-fitting simillarly we can represent vector in layeredly by curve-fitting eq 
** 3D- redering
** Sterio vision, multi sterio vison
** 3D- redering (multi sterio vision)
** Image manger
** 3d- generation
** 3d-models for meachine learning
* Audio signal
** sankrit in phonatic representation
** model audio in (phonatic + musics)
** auto transilate

* Web page for Gate

** Inovative may to teaching and learing
* Creating a AI
* Lib for svg
* Opengl for : 3d view 
https://www.youtube.com/playlist?list=PL6xSOsbVA1eYSZTKBxnoXYboy7wc4yg-Z
* DONE Theory of Computer Graphic 
image rotation,trasilation,affininte, camare view, graphic 3point vectices and faces, shapdes, 


https://www.youtube.com/watch?v=vQ60rFwh2ig&list=PLzH6n4zXuckrPkEUK5iMQrQyvj9Z6WCrm&index=2



